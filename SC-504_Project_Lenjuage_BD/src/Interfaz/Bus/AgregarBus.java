/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz.Bus;

import ConectionDB.ConectionDB;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import popups.Popups;
import java.sql.*;

/**
 * @author ROURY
 */
public class AgregarBus extends javax.swing.JFrame {
    
    public static String Crud_;
    public static boolean isEdit_;
    public static String textoBoton_;
    public static int ID_aEditar_;
    private VistaBus VistaBus;
    
    Popups popups = new Popups();
    String idChofer;
    String estado;
    
    public AgregarBus() {
        initComponents();
        cargarChoferes();
        
        Chofer.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String choferSeleccionado = Chofer.getSelectedItem().toString();
                
                if (!choferSeleccionado.equals("-")) {
                    idChofer = choferSeleccionado.split(" - ")[0];
                } else {
                }
            }
        });
        
        Estado.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String EstadoSeleccionado = Estado.getSelectedItem().toString();
                
                if (EstadoSeleccionado == "Activo") {
                    estado = "1";
                } else {
                    estado = "0";
                }
            }
        });
        
    }

    //esto es un set no quitar el la palabra set antes del nombre del metodo
    public void setVistaBus(VistaBus vistaBus) {
        this.VistaBus = vistaBus;
    }
    
    public void actualizarTabla() {
        if (VistaBus != null) {
            VistaBus.cargarDatos();
        }
    }
    
    public void limpiarCampos() {
        Placa.setText("");
        Modelo.setText("");
        Marca.setText("");
        Anio.setText("");
        Capacidad.setText("");
    }
    
    public void setDatosEdicion(int placa, String modelo, String marca, String anio, String capacidad, String estado, String chofer) {
        Placa.setText(String.valueOf(placa));
        Modelo.setText(modelo);
        Marca.setText(marca);
        Anio.setText(anio);
        Capacidad.setText(capacidad);
        
        Estado.setSelectedItem(estado);
        
        for (int i = 0; i < Chofer.getItemCount(); i++) {
            String item = (String) Chofer.getItemAt(i);
            if (item.contains(chofer)) {
                Chofer.setSelectedIndex(i);
                break;
            }
        }
        
        for (ActionListener listener : Chofer.getActionListeners()) {
            listener.actionPerformed(new ActionEvent(Chofer, ActionEvent.ACTION_PERFORMED, null));
        }
        
        for (ActionListener listener : Estado.getActionListeners()) {
            listener.actionPerformed(new ActionEvent(Estado, ActionEvent.ACTION_PERFORMED, null));
        }
    }
    
    private void cargarChoferes() {
        Connection conn = null;
        CallableStatement stmt = null;
        ResultSet rs = null;
        
        try {
            ConectionDB conexionDB = new ConectionDB();
            conn = conexionDB.getConnection();
            
            String sql = "{call Obtener_Lista_Choferes(?)}";
            stmt = conn.prepareCall(sql);
            stmt.registerOutParameter(1, oracle.jdbc.OracleTypes.CURSOR);
            stmt.execute();
            
            rs = (ResultSet) stmt.getObject(1);
            
            Chofer.removeAllItems();

            /*
            Ojo con los trim, son muy necesarios, no tocar ni modificar
             */
            while (rs.next()) {
                int idChofer = rs.getInt("ID_Chofer");
                String nombreCompleto = rs.getString("sNombre_Completo");
                Chofer.addItem(idChofer + " - " + nombreCompleto);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (stmt != null) {
                    stmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Cerrar = new javax.swing.JButton();
        Registrar = new javax.swing.JButton();
        warning = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Placa = new javax.swing.JTextField();
        Modelo = new javax.swing.JTextField();
        Marca = new javax.swing.JTextField();
        Anio = new javax.swing.JTextField();
        Capacidad = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        Estado = new javax.swing.JComboBox<>();
        Chofer = new javax.swing.JComboBox<>();
        Error_fecha = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), Crud_ + " de Buses", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 3, 18), new java.awt.Color(204, 0, 51))); // NOI18N
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Cerrar.setBackground(new java.awt.Color(153, 0, 0));
        Cerrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Cerrar.setForeground(new java.awt.Color(255, 255, 255));
        Cerrar.setText("Cerrar");
        Cerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        Registrar.setBackground(new java.awt.Color(0, 102, 255));
        Registrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Registrar.setForeground(new java.awt.Color(255, 255, 255));
        Registrar.setText(textoBoton_);
        Registrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt);
            }
        });

        warning.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        warning.setForeground(new java.awt.Color(255, 51, 51));

        jLabel1.setText("* Campos Obligatorios");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Por favor llene toda la información necesaria");

        jPanel2.setBackground(new java.awt.Color(162, 171, 205));

        Placa.setBackground(new java.awt.Color(255, 255, 255));
        Placa.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "* Placa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(102, 102, 102))); // NOI18N
        Placa.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Placa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlacaActionPerformed(evt);
            }
        });

        Modelo.setBackground(new java.awt.Color(255, 255, 255));
        Modelo.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "* Modelo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(102, 102, 102))); // NOI18N

        Marca.setBackground(new java.awt.Color(255, 255, 255));
        Marca.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "* Marca", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(102, 102, 102))); // NOI18N

        Anio.setBackground(new java.awt.Color(255, 255, 255));
        Anio.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "* Año", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(102, 102, 102))); // NOI18N
        Anio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnioActionPerformed(evt);
            }
        });
        Anio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AnioKeyTyped(evt);
            }
        });

        Capacidad.setBackground(new java.awt.Color(255, 255, 255));
        Capacidad.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "* Capacidad", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 18), new java.awt.Color(102, 102, 102))); // NOI18N
        Capacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CapacidadActionPerformed(evt);
            }
        });
        Capacidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CapacidadKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Anio, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Marca, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Placa, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Placa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(Anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(162, 171, 205));

        Estado.setBackground(new java.awt.Color(255, 255, 255));
        Estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        Estado.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "* Estado", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 18))); // NOI18N
        Estado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        Chofer.setBackground(new java.awt.Color(255, 255, 255));
        Chofer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Chofer.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Choferes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        Chofer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Estado, 0, 286, Short.MAX_VALUE)
                    .addComponent(Chofer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Chofer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
        );

        Error_fecha.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        Error_fecha.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(121, 121, 121)
                                .addComponent(Registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(warning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Error_fecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(170, 170, 170))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(261, 261, 261))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(Error_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(warning, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Cerrar)
                        .addComponent(Registrar)))
                .addGap(67, 67, 67))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_CerrarActionPerformed

    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarActionPerformed
        if (isEdit_) {
//placa solo string a int
            Placa.setEnabled(false);
            String placa = Placa.getText();
            String anio = Anio.getText();
            String modelo = Modelo.getText();
            String marca = Marca.getText();
            String chofer = Chofer.getSelectedItem().toString();
            String capacidad = Capacidad.getText();
            Color colorError = new Color(255, 204, 204);
            
            if (placa.isEmpty() || anio.isEmpty() || modelo.isEmpty()
                    || marca.isEmpty() || chofer.isEmpty() || chofer.equals("-")
                    || capacidad.isEmpty() || estado.isEmpty()) {
                
                if (placa.isEmpty()) {
                    Placa.setBackground(colorError);
                } else {
                    Placa.setBackground(Color.WHITE);
                }
                
                if (modelo.isEmpty()) {
                    Modelo.setBackground(colorError);
                } else {
                    Modelo.setBackground(Color.WHITE);
                }
                
                if (marca.isEmpty()) {
                    Marca.setBackground(colorError);
                } else {
                    Marca.setBackground(Color.WHITE);
                }
                
                if (anio.isEmpty()) {
                    Anio.setBackground(colorError);
                } else {
                    Anio.setBackground(Color.WHITE);
                }
                
                if (estado.isEmpty()) {
                    Estado.setBackground(colorError);
                } else {
                    Estado.setBackground(Color.WHITE);
                }
                
                if (chofer.isEmpty() || chofer.equals("-")) {
                    Chofer.setBackground(colorError);
                } else {
                    Chofer.setBackground(Color.WHITE);
                }
                
                if (capacidad.isEmpty()) {
                    Capacidad.setBackground(colorError);
                } else {
                    Capacidad.setBackground(Color.WHITE);
                }
            } else {
                Connection conn = null;
                CallableStatement stmt = null;
                
                try {
                    ConectionDB conexionDB = new ConectionDB();
                    conn = conexionDB.getConnection();
                    
                    String sql = "{CALL Procedure_ActualizarBus(?,?,?,?,?,?,?)}";
                    stmt = conn.prepareCall(sql);
                    stmt.setInt(1, Integer.parseInt(placa));
                    stmt.setInt(2, Integer.parseInt(idChofer));
                    stmt.setString(3, modelo);
                    stmt.setString(4, marca);
                    stmt.setInt(5, Integer.parseInt(anio));
                    stmt.setInt(6, Integer.parseInt(capacidad));
                    stmt.setInt(7, Integer.parseInt(estado));
                    
                    stmt.executeUpdate();
                    popups.pulgar_arriba("Bus actualizado exitosamente.");
                    this.setVisible(false);
                    actualizarTabla();
                    limpiarCampos();
                    
                } catch (SQLException e) {
                    e.printStackTrace();
                    popups.error("Error al actualizar el bus.");
                } finally {
                    try {
                        if (stmt != null) {
                            stmt.close();
                        }
                        if (conn != null) {
                            conn.close();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        } else {
            String placa = Placa.getText();
            String anio = Anio.getText();
            String modelo = Modelo.getText();
            String marca = Marca.getText();
            String chofer = Chofer.getSelectedItem().toString();
            String capacidad = Capacidad.getText();
            Color colorError = new Color(255, 204, 204);
            
            if (placa.isEmpty() || anio.isEmpty() || modelo.isEmpty()
                    || marca.isEmpty() || estado.isEmpty() || chofer.isEmpty() || chofer.equals("-") || capacidad.isEmpty()) {
                
                if (placa.isEmpty()) {
                    Placa.setBackground(colorError);
                } else {
                    Placa.setBackground(Color.WHITE);
                }
                
                if (modelo.isEmpty()) {
                    Modelo.setBackground(colorError);
                } else {
                    Modelo.setBackground(Color.WHITE);
                }
                
                if (marca.isEmpty()) {
                    Marca.setBackground(colorError);
                } else {
                    Marca.setBackground(Color.WHITE);
                }
                
                if (anio.isEmpty()) {
                    Anio.setBackground(colorError);
                } else {
                    Anio.setBackground(Color.WHITE);
                }
                
                if (estado.isEmpty()) {
                    Estado.setBackground(colorError);
                } else {
                    Estado.setBackground(Color.WHITE);
                }
                
                if (chofer.isEmpty() || chofer.equals("-")) {
                    Chofer.setBackground(colorError);
                } else {
                    Chofer.setBackground(Color.WHITE);
                }
                
                if (capacidad.isEmpty()) {
                    Capacidad.setBackground(colorError);
                } else {
                    Capacidad.setBackground(Color.WHITE);
                }
            } else {
                Connection conn = null;
                PreparedStatement checkStmt = null;
                ResultSet rs = null;
                
                try {
                    ConectionDB conexionDB = new ConectionDB();
                    conn = conexionDB.getConnection();
                    
                    String sqlCheck = "SELECT COUNT(*) FROM Bus WHERE nPlaca = ?";
                    checkStmt = conn.prepareStatement(sqlCheck);
                    checkStmt.setString(1, placa);
                    rs = checkStmt.executeQuery();

                    //warning aquí ya que placa es primary
                    if (rs.next() && rs.getInt(1) > 0) {
                        popups.error("La placa ya está registrada.");
                        return;
                    }
                    String sql = "{CALL Procedure_RegistrarBus(?,?,?,?,?,?,?)}";
                    CallableStatement stmt = conn.prepareCall(sql);
                    stmt.setInt(1, Integer.parseInt(placa));
                    stmt.setString(2, modelo);
                    stmt.setString(3, marca);
                    stmt.setInt(4, Integer.parseInt(anio));
                    stmt.setInt(5, Integer.parseInt(capacidad));
                    stmt.setInt(6, Integer.parseInt(estado));
                    stmt.setInt(7, Integer.parseInt(idChofer));
                    
                    stmt.executeUpdate();
                    popups.pulgar_arriba("Bus registrado exitosamente.");
                    actualizarTabla();
                    limpiarCampos();
                    
                } catch (SQLException e) {
                    e.printStackTrace();
                    popups.error("Error al registrar el bus.");
                } finally {
                    try {
                        if (checkStmt != null) {
                            checkStmt.close();
                        }
                        if (conn != null) {
                            conn.close();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }//GEN-LAST:event_RegistrarActionPerformed

    private void AnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AnioKeyTyped
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_AnioKeyTyped

    private void AnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnioActionPerformed
        
    }//GEN-LAST:event_AnioActionPerformed

    private void CapacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CapacidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CapacidadActionPerformed

    private void CapacidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CapacidadKeyTyped
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if (!numero) {
            evt.consume();
        }
    }//GEN-LAST:event_CapacidadKeyTyped

    private void PlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlacaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarBus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarBus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarBus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarBus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarBus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Anio;
    private javax.swing.JTextField Capacidad;
    private javax.swing.JButton Cerrar;
    private javax.swing.JComboBox<String> Chofer;
    private javax.swing.JLabel Error_fecha;
    private javax.swing.JComboBox<String> Estado;
    private javax.swing.JTextField Marca;
    private javax.swing.JTextField Modelo;
    private javax.swing.JTextField Placa;
    private javax.swing.JButton Registrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel warning;
    // End of variables declaration//GEN-END:variables
}
